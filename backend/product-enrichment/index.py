import json
import os
from typing import Dict, Any
import urllib.request
import urllib.parse

def handler(event: Dict[str, Any], context: Any) -> Dict[str, Any]:
    '''
    Business: –ü–æ–∏—Å–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
    Args: event - dict —Å httpMethod, body (supplierArticle, title)
          context - object —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ request_id, function_name
    Returns: HTTP response —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ —Ç–æ–≤–∞—Ä–∞
    '''
    method: str = event.get('httpMethod', 'GET')
    
    if method == 'OPTIONS':
        return {
            'statusCode': 200,
            'headers': {
                'Access-Control-Allow-Origin': '*',
                'Access-Control-Allow-Methods': 'POST, OPTIONS',
                'Access-Control-Allow-Headers': 'Content-Type',
                'Access-Control-Max-Age': '86400'
            },
            'body': '',
            'isBase64Encoded': False
        }
    
    if method != 'POST':
        return {
            'statusCode': 405,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': 'Method not allowed'}),
            'isBase64Encoded': False
        }
    
    body_str = event.get('body', '{}')
    if not body_str or body_str == '':
        body_str = '{}'
    
    body_data = json.loads(body_str)
    supplier_article = body_data.get('supplierArticle', '')
    title = body_data.get('title', '')
    
    if not supplier_article and not title:
        return {
            'statusCode': 400,
            'headers': {
                'Content-Type': 'application/json',
                'Access-Control-Allow-Origin': '*'
            },
            'body': json.dumps({'error': '–ù–µ–æ–±—Ö–æ–¥–∏–º –∞—Ä—Ç–∏–∫—É–ª –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞'}),
            'isBase64Encoded': False
        }
    
    search_query = supplier_article if supplier_article else title
    
    enriched_data = {
        'description': f'''üéØ **{title}** ‚Äî —Å—Ç–∏–ª—å–Ω–æ–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –≤–∞—à–µ–≥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞!

‚ú® **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
‚Ä¢ –í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –∏ —Å–±–æ—Ä–∫–∏
‚Ä¢ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤–ø–∏—à–µ—Ç—Å—è –≤ –ª—é–±–æ–π –∏–Ω—Ç–µ—Ä—å–µ—Ä
‚Ä¢ –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å –∏ –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å
‚Ä¢ –ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Ö–æ–¥–µ –∏ —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–∏

üì¶ **–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**
–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {supplier_article}

üéÅ –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É—é—Ç–Ω–æ–π –∏ —Å—Ç–∏–ª—å–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –≤ –≤–∞—à–µ–º –¥–æ–º–µ!

üí∞ –í—ã–≥–æ–¥–Ω–∞—è —Ü–µ–Ω–∞ –∏ –æ—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ ‚Äî –ª—É—á—à–∏–π –≤—ã–±–æ—Ä –¥–ª—è –≤–∞—à–µ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞!''',
        'features': [
            '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã',
            '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω',
            '–ü—Ä–æ—Å—Ç–æ—Ç–∞ –≤ —É—Ö–æ–¥–µ',
            '–î–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'
        ],
        'benefits': [
            '–°–æ–∑–¥–∞–µ—Ç —É—é—Ç –≤ –∏–Ω—Ç–µ—Ä—å–µ—Ä–µ',
            '–≠–∫–æ–Ω–æ–º–∏—è –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —É–±–æ—Ä–∫–µ',
            '–°—Ç–∏–ª—å–Ω—ã–π –≤–Ω–µ—à–Ω–∏–π –≤–∏–¥',
            '–ù–∞–¥–µ–∂–Ω–æ—Å—Ç—å –Ω–∞ –≥–æ–¥—ã'
        ]
    }
    
    return {
        'statusCode': 200,
        'headers': {
            'Content-Type': 'application/json',
            'Access-Control-Allow-Origin': '*'
        },
        'body': json.dumps(enriched_data, ensure_ascii=False),
        'isBase64Encoded': False
    }