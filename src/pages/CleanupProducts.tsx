import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { cleanupProductsByArticle } from '@/utils/cleanupProducts';
import Icon from '@/components/ui/icon';

const CleanupProducts = () => {
  const [isRunning, setIsRunning] = useState(false);
  const [result, setResult] = useState<{ removed: number; remaining: number } | null>(null);

  const handleCleanup = () => {
    setIsRunning(true);
    setResult(null);
    
    setTimeout(() => {
      const cleanupResult = cleanupProductsByArticle();
      setResult(cleanupResult);
      setIsRunning(false);
    }, 500);
  };

  return (
    <div className="min-h-screen bg-gray-50 p-8">
      <div className="max-w-2xl mx-auto">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Icon name="Trash2" size={24} />
              –û—á–∏—Å—Ç–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º
            </CardTitle>
            <CardDescription>
              –£–¥–∞–ª–µ–Ω–∏–µ 96 —Ç–æ–≤–∞—Ä–æ–≤ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <Alert>
              <Icon name="Info" size={16} />
              <AlertDescription>
                –≠—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è —É–¥–∞–ª–∏—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ (–¶0084746, –¶0084980, –∏ —Ç.–¥.).
                –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è –≤ localStorage.
              </AlertDescription>
            </Alert>

            <Button 
              onClick={handleCleanup} 
              disabled={isRunning}
              className="w-full"
              size="lg"
              variant="destructive"
            >
              {isRunning ? (
                <>
                  <Icon name="Loader2" className="mr-2 animate-spin" size={16} />
                  –û—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è...
                </>
              ) : (
                <>
                  <Icon name="Trash2" className="mr-2" size={16} />
                  –ó–∞–ø—É—Å—Ç–∏—Ç—å –æ—á–∏—Å—Ç–∫—É
                </>
              )}
            </Button>

            {result && (
              <Alert className={result.removed > 0 ? 'bg-green-50 border-green-200' : 'bg-blue-50 border-blue-200'}>
                <Icon name={result.removed > 0 ? 'CheckCircle' : 'Info'} size={16} />
                <AlertDescription>
                  <div className="space-y-2">
                    <p className="font-semibold">–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:</p>
                    <ul className="list-disc list-inside space-y-1">
                      <li>üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ: {result.removed}</li>
                      <li>‚úÖ –û—Å—Ç–∞–ª–æ—Å—å: {result.remaining}</li>
                    </ul>
                    {result.removed === 0 && (
                      <p className="text-sm text-muted-foreground mt-2">
                        –¢–æ–≤–∞—Ä—ã —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
                      </p>
                    )}
                  </div>
                </AlertDescription>
              </Alert>
            )}

            {result && result.removed > 0 && (
              <Alert className="bg-blue-50 border-blue-200">
                <Icon name="Info" size={16} />
                <AlertDescription>
                  <p className="text-sm">
                    ‚úÖ –¢–æ–≤–∞—Ä—ã —É–¥–∞–ª–µ–Ω—ã! –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–ª–∏ –∞–¥–º–∏–Ω–∫–∏, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è.
                  </p>
                </AlertDescription>
              </Alert>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default CleanupProducts;
