import { useState, useEffect } from 'react';
import { Helmet } from 'react-helmet-async';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';
import { useProducts } from '@/contexts/ProductContext';
import OrdersTab from '@/components/admin/OrdersTab';
import ProductsTab from '@/components/admin/ProductsTab';
import EmployeesTab from '@/components/admin/EmployeesTab';
import StatisticsTab from '@/components/admin/StatisticsTab';
import OzonImportTab from '@/components/admin/OzonImportTab';
import AdminLogin from '@/components/admin/AdminLogin';
import AdminHeader from '@/components/admin/AdminHeader';
import AdminMobileMenu from '@/components/admin/AdminMobileMenu';
import AdminStatsCards from '@/components/admin/AdminStatsCards';
import { defaultProducts } from '@/data/defaultProducts';

const Admin = () => {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);
  const [activeTab, setActiveTab] = useState('statistics');
  const { allFurnitureSets, setAllFurnitureSets } = useProducts();
  const [products, setProducts] = useState(defaultProducts);
  const { toast } = useToast();

  useEffect(() => {
    const adminAuth = localStorage.getItem('adminAuth');
    if (adminAuth === 'true') {
      setIsAuthenticated(true);
    }
  }, []);

  useEffect(() => {
    const savedProducts = localStorage.getItem('adminProducts');
    if (savedProducts) {
      try {
        const loadedProducts = JSON.parse(savedProducts);
        
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å Ozon (—É –Ω–∏—Ö –µ—Å—Ç—å supplierArticle)
        const fixedProducts = loadedProducts.map((product: any) => {
          let fixed = product;
          
          if (product.supplierArticle && product.price && product.price.startsWith('http')) {
            // –≠—Ç–æ –±–∏—Ç—ã–π —Ç–æ–≤–∞—Ä —Å Ozon - —Ü–µ–Ω–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ
            console.log('–ò—Å–ø—Ä–∞–≤–ª—è—é —Ç–æ–≤–∞—Ä —Å Ozon:', product.title);
            
            fixed = {
              ...product,
              price: '0 ‚ÇΩ', // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ü–µ–Ω—É
              image: product.images?.[0] || product.price, // –ë–µ—Ä—ë–º –ø–µ—Ä–≤–æ–µ —Ñ–æ—Ç–æ –∏–∑ images –∏–ª–∏ –∏–∑ price
              images: product.images || [product.price] // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —Ñ–æ—Ç–æ
            };
          }
          
          // –û—á–∏—â–∞–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç —Å–∏–º–≤–æ–ª–∞ ‚ÇΩ –∏ –¥—Ä—É–≥–∏—Ö –≤–∞–ª—é—Ç
          const cleanImageUrl = (url: string) => {
            if (!url) return url;
            // –£–¥–∞–ª—è–µ–º —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã –∏ –≤—Å—ë —á—Ç–æ –ø–æ—Å–ª–µ –Ω–µ–≥–æ
            return url.replace(/[‚ÇΩ‚Ç∏‚Ç¥‚Ç¨$¬£¬•].*$/, '').trim();
          };
          
          const cleanedImage = cleanImageUrl(fixed.image || '');
          const cleanedImages = (fixed.images || []).map(cleanImageUrl);
          
          // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –∫–∞—Ç–∞–ª–æ–≥–∞
          return {
            ...fixed,
            image: cleanedImage,
            images: cleanedImages.length > 0 ? cleanedImages : [cleanedImage],
            items: fixed.items || [],
            style: fixed.style || '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π',
            description: fixed.description || fixed.title || '',
            colors: fixed.colors || ['–ë–∞–∑–æ–≤—ã–π']
          };
        });
        
        setProducts(fixedProducts);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (JSON.stringify(fixedProducts) !== savedProducts) {
          localStorage.setItem('adminProducts', JSON.stringify(fixedProducts));
          localStorage.setItem('larana-products', JSON.stringify(fixedProducts));
          console.log('‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å Ozon');
        } else {
          // –î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º
          localStorage.setItem('larana-products', JSON.stringify(fixedProducts));
        }
      } catch (error) {
        console.error('Error loading products:', error);
      }
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º
      localStorage.setItem('adminProducts', JSON.stringify(defaultProducts));
      localStorage.setItem('larana-products', JSON.stringify(defaultProducts));
    }
  }, []);

  const handleLogin = () => {
    setIsAuthenticated(true);
  };

  const handleLogout = () => {
    localStorage.removeItem('adminAuth');
    setIsAuthenticated(false);
    toast({
      title: "–í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω",
      description: "–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"
    });
  };

  const handleProductUpdate = (updatedProducts: any[]) => {
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    const normalizedProducts = updatedProducts.map(product => ({
      ...product,
      items: product.items || [],
      style: product.style || '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π',
      description: product.description || product.title || '',
      colors: product.colors || ['–ë–∞–∑–æ–≤—ã–π'],
      images: product.images || [product.image]
    }));
    
    console.log('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤:', normalizedProducts.length);
    console.log('üì¶ –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞:', normalizedProducts[0]);
    
    setProducts(normalizedProducts);
    setAllFurnitureSets(normalizedProducts); // –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    localStorage.setItem('adminProducts', JSON.stringify(normalizedProducts));
    
    console.log('‚úÖ –¢–æ–≤–∞—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∏ localStorage');
  };

  if (!isAuthenticated) {
    return <AdminLogin onLogin={handleLogin} />;
  }

  return (
    <>
      <Helmet>
        <title>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å | LARANA</title>
        <meta name="robots" content="noindex, nofollow" />
      </Helmet>
      <div className="min-h-screen bg-background">
        <AdminHeader onLogout={handleLogout} />

        <main className="container mx-auto px-3 md:px-4 py-4 md:py-8">
          <AdminStatsCards productsCount={products.length} />
          <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
            <AdminMobileMenu
              open={mobileMenuOpen}
              onOpenChange={setMobileMenuOpen}
              activeTab={activeTab}
              onTabChange={setActiveTab}
            />
            <TabsList className="hidden md:grid w-full grid-cols-3 md:grid-cols-5 gap-1">
              <TabsTrigger value="statistics" className="flex items-center gap-1 md:gap-2 text-xs md:text-sm">
                <Icon name="BarChart3" size={14} className="md:w-4 md:h-4" />
                <span className="hidden sm:inline">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</span>
                <span className="sm:hidden">–°—Ç–∞—Ç</span>
              </TabsTrigger>
              <TabsTrigger value="orders" className="flex items-center gap-1 md:gap-2 text-xs md:text-sm">
                <Icon name="ShoppingBag" size={14} className="md:w-4 md:h-4" />
                <span className="hidden sm:inline">–ó–∞–∫–∞–∑—ã</span>
                <span className="sm:hidden">–ó–∞–∫</span>
              </TabsTrigger>
              <TabsTrigger value="products" className="flex items-center gap-1 md:gap-2 text-xs md:text-sm">
                <Icon name="Package" size={14} className="md:w-4 md:h-4" />
                <span className="hidden sm:inline">–¢–æ–≤–∞—Ä—ã</span>
                <span className="sm:hidden">–¢–æ–≤</span>
              </TabsTrigger>
              <TabsTrigger value="ozon" className="flex items-center gap-1 md:gap-2 text-xs md:text-sm">
                <Icon name="Download" size={14} className="md:w-4 md:h-4" />
                Ozon
              </TabsTrigger>
              <TabsTrigger value="employees" className="flex items-center gap-1 md:gap-2 text-xs md:text-sm">
                <Icon name="Users" size={14} className="md:w-4 md:h-4" />
                <span className="hidden sm:inline">–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏</span>
                <span className="sm:hidden">–°–æ—Ç—Ä</span>
              </TabsTrigger>
            </TabsList>

            <TabsContent value="statistics" className="space-y-4">
              <StatisticsTab />
            </TabsContent>

            <TabsContent value="orders" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏</CardTitle>
                  <CardDescription>
                    –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–π—Ç–µ –∏ –æ–±–Ω–æ–≤–ª—è–π—Ç–µ —Å—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <OrdersTab />
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="products" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏</CardTitle>
                  <CardDescription>
                    –î–æ–±–∞–≤–ª—è–π—Ç–µ, —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∏ —É–¥–∞–ª—è–π—Ç–µ —Ç–æ–≤–∞—Ä—ã
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <ProductsTab 
                    products={products}
                    onProductUpdate={handleProductUpdate}
                  />
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="ozon" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Ozon</CardTitle>
                  <CardDescription>
                    –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –≤–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞ –Ω–∞ Ozon
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <OzonImportTab 
                    products={products}
                    onProductsUpdate={handleProductUpdate}
                  />
                </CardContent>
              </Card>
            </TabsContent>

            <TabsContent value="employees" className="space-y-4">
              <Card>
                <CardHeader>
                  <CardTitle>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º–∏</CardTitle>
                  <CardDescription>
                    –î–æ–±–∞–≤–ª—è–π—Ç–µ –∏ —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –¥–æ—Å—Ç—É–ø–æ–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <EmployeesTab />
                </CardContent>
              </Card>
            </TabsContent>
          </Tabs>
        </main>
      </div>
    </>
  );
};

export default Admin;